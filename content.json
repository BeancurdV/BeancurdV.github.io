[{"title":"OS概述","date":"2023-10-05T13:12:30.575Z","path":"2023/10/05/OS概述/","text":"手写操作系统开发环境搭建 手写OS一条龙环境 或者 手写OS自建 Windows Ubuntu16 bochs 2.7 调试汇编用的 qemu 调试C语言用的 gdb Clion tb pdd 买激活码 计算机行业全貌 ![image-20231006091042602](&#x2F;Users&#x2F;zhangfengcheng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20231006091042602.png) 正向 35岁 CURD –》 架构师（大数据、高并发），需要机会 CURD –》 技术专家 凭自己 中间件 、嵌入式 Linux内核 、 JVM工程师、音视频、Android内核优化 觉醒 逆向 https://www52pojie.cn 外挂、破解、病毒、黑客 案例：WPS 利用od 汇编代码， 还原代码 常见安全措施：加伪代码、混淆技术、加壳 应用层对抗 VS 内核层对抗 应用层调试与反调试 ， 比如gdb 内核层对抗 Hook ， tenprotect hp， 利用驱动 灰产 赚钱。 研究外挂：任鸟飞 ； 破解：shark恒；内核：我。 会了内核 技术专家 光明饭； 我爱破解 招工； 教育 虚拟化 车企安全 灰产 PC游戏； 桌面端 刷数据 找到自己兴趣 爱好。 人、神、mo？ 学完内核之后，过掉了win7的tenprotect了。 Windows 内核课程的目标： ​ 用户态切内核态的桥，拦截所有的API ​ 写调试器 一个完整的现代操作系统的结构 OS应用层： 入口、 调用内核API ​ malloc –》kmalloc OS内核层： ​ 可运行的os内核： ​ 实模式—》切换到保护模式 ​ 中断 ​ 内存 ​ 内核任务 ​ 用户态 ​ 文件系统+Shell ​ 文件系统内核 ​ 文件系统API ​ 内存错误 ​ 页换入换出 ​ 网络 ​ 多核、多线程、锁、itc、ipc 驱动 硬件 ​ 机械键盘 CPU 段页门 实模式 保护模式、虚拟8086 实模式： 16 20bit 1MB 内存 使用汇编 获取信息 中断 （硬件中断、软件中断） 编程 控制 中断控制芯片，使用 汇编 屏幕 字符模式 图形模式 存储设置 软盘 硬盘 USB 网络 网卡 输入 键盘 鼠标 知识准备（参考学习节奏） C语言 汇编 linux编程、redis、MySql 嵌入式 Linux内核 Windows内核 等这些都需要 汇编+C语言 懂硬件（可以先忽略） 18年 滴水 红手指 唐老师(唐昭妙) ： 黄小勇 arm云 红手指 3个亿 —》百度 虚拟化。 选择 技术部硬核 遇到唐老师 圈子 选择-》运气-》选择 树挪死，人挪活 能学到哪些？ 汇编 大约7个小时 基础、 OD(windows)调试、写内核代码（汇编脚本） 如果进度觉得慢，看《操作系统真相还原》 C语言 ​ 结合汇编去讲的 ​ 汇编、操作、内存 ​ 再往下是 硬编码、机器码（手写编程语言课程） 硬件原理 ​ 运行原理、驱动、编码实现、实战演示 任务 ​ 需要自己去实现 具体到哪些程度： 内存学到这个程度： 虚拟化+内存 文件操作系统学到这个程度 头头是道，但是C语言不会写？ 64 VS 32 差异 ，寻址差异 内存差异 栈差异、 进程结构的差异。 操作系统是围绕内存展开的。 (汇编、C语言)、os融会贯通 聚集路线 ​ 单点突破 学会了操作系统，后续的路怎么走？ 正向 架构师 技术专家 中间件 实力 + 运气 认识自己 跟对人 遇到贵人 人脉 你自己得行 有人说你行 人脉-》运气 你喜欢跟谁相处 格局大、幽默 只有别人喜欢你，你才有机会。 ​ 有人帮 ​ 讲玄学 说你行的人得行 舞台、机会 事-》成才 一将功成万骨枯 你说谁行谁就行 逆向 攻 外挂 破解 调试 病毒 守 反(外挂 破解 调试 病毒)","tags":[{"name":"OS","slug":"OS","permalink":"https://beancurdv.github.io/tags/OS/"},{"name":"Kernel","slug":"Kernel","permalink":"https://beancurdv.github.io/tags/Kernel/"}]},{"title":"手写OS","date":"2023-10-05T08:40:53.171Z","path":"2023/10/05/手写OS/","text":"一、玩转CPU实模式实现操作系统微内核 汇编全貌 ， 玩转寄存器 手绘堆栈，玩转系统执行流 玩转函数，自构建执行流 玩转软、硬盘，让OS尽情发挥 二、实现真正意义上的内核深入学习CPU段机制与保护模式 编码进入保护模式，支持C语言开发与调试 玩转指针 编写屏幕驱动，实现内核打印函数printk 三、 给内核增加中断与虚拟内存管理接管BIOS中断，实现时钟中断 键盘中断 内存条检测，实现物理内存管理模块 开启分页，实现虚拟内存管理模块 带你手写协程，深入理解任务切换 四、 实现任务切换和文件系统进入用户态，手写系统调用，完成状态切换 C语言实现硬盘驱动，实现同步、异步读写硬盘 C语言实现文件系统、目录管理、文件管理","tags":[{"name":"OS","slug":"OS","permalink":"https://beancurdv.github.io/tags/OS/"},{"name":"Kernel","slug":"Kernel","permalink":"https://beancurdv.github.io/tags/Kernel/"}]},{"title":"Framework概述","date":"2023-10-05T05:46:39.000Z","path":"2023/10/05/Framework概述/","text":"一、系统启动1.1 系统启动流程1.2 Init进程1.3 Zygote进程1.4 SystemServer进程 这里包含了 系统服务启动流程 二、基础设施2.1 Handler2.2 Binder体系2.3 AMS 服务该模块要包含 App启动流程 2.3 WMS服务2.4 PKMS服务 安装过程-PKMS启动后的 APK安装过程 安装过程-单个APK安装过程 安装过程-Dex优化处理 卸载过程-单个APK卸载过程 权限管理-权限申请流程 三、子系统3.1 View体系3.2 显示系统3.2.N Android开启动画&#x2F;frameworks&#x2F;base&#x2F;cmds&#x2F;bootanimation 3.3 事件系统四、领域细分4.1 APP保活五、上下求索这里可以增加一些内核的东西。 N、AOSP中基础知识Android线程模型&#x2F;system&#x2F;core&#x2F;libutils&#x2F;Threads.h Android 智能指针 10月份 Binder 对赌； PKMS总结；事件系统；显示系统总结；handler总结","tags":[{"name":"Framework","slug":"Framework","permalink":"https://beancurdv.github.io/tags/Framework/"},{"name":"Android","slug":"Android","permalink":"https://beancurdv.github.io/tags/Android/"}]},{"title":"hexo_guide.md","date":"2023-10-05T03:19:27.000Z","path":"2023/10/05/hexo-guide-md/","text":"Hexo操作说明在public文件夹生成内容nnxxx 1hexo g // 或者 hexo generate 清空public中的内容 1hexo c // 或者 hexo clean 测试服务 1hexo s [-p 端口号] // 或者 hexo server ， 如果不指定端口号，则默认是4000 部署服务 1hexo d // 或者 hexo deploy 将编译后的 .deploy_git 文件夹，并上传到git上 创建与删除文章 123hexo new [post/draft/page] &lt;filename&gt;.md 删除source/_post文件夹下的 文档， 重新编译 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 文件布局参考链接 Hexo的常用指令合集 Hexo博客的使用","tags":[{"name":"zfc","slug":"zfc","permalink":"https://beancurdv.github.io/tags/zfc/"},{"name":"123","slug":"123","permalink":"https://beancurdv.github.io/tags/123/"}]},{"title":"Hello World","date":"2023-10-05T02:35:35.590Z","path":"2023/10/05/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]